<<: !include esp32-ble-example-debug.yaml

lumentree_ble:
  - ble_client_id: client0
    id: inverter0
    update_interval: 10s

interval:
  - interval: 36s
    then:
      # System Status registers
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_SYSTEM_STATUS);
          const uint8_t system_status_frame[] = {
            0x01, 0x03, 0xBE, 0x03, 0x00, 0x11, 0x16, 0x01, 0x02, 0x50, 0x32, 0x34, 0x31, 0x30, 0x31, 0x39, 0x30, 0x37,
            0x30, 0x00, 0x05, 0x12, 0x42, 0x20, 0x11, 0x15, 0x18, 0xFF, 0xC4, 0x09, 0x92, 0x00, 0x00, 0x09, 0x92, 0x13,
            0x60, 0x13, 0x60, 0x01, 0xA9, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x3C, 0x00, 0xA5, 0x00, 0x00, 0x05, 0x6A, 0x06,
            0x40, 0x00, 0x00, 0x55, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00,
            0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x21, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x14, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x01, 0xFF,
            0xDC, 0x00, 0xA3, 0x01, 0xAF, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x01, 0xB1, 0x00, 0x3C, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x53, 0xA1
          };
          id(inverter0).assemble(system_status_frame, sizeof(system_status_frame));

      - delay: 3s

      # System Status registers
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_SYSTEM_STATUS);
          const uint8_t system_status_frame[] = {
            0x01, 0x03, 0xBE, 0x03, 0x00, 0x11, 0x16, 0x01, 0x02, 0x50, 0x32, 0x34, 0x31, 0x30, 0x31, 0x39, 0x30, 0x37,
            0x30, 0x00, 0x05, 0x12, 0x42, 0x20, 0x11, 0x15, 0x18, 0xFF, 0xBA, 0x09, 0x74, 0x00, 0x00, 0x09, 0x6A, 0x13,
            0x60, 0x13, 0x60, 0x01, 0x9D, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x3C, 0x00, 0x9E, 0x00, 0x00, 0x05, 0x6E, 0x06,
            0x40, 0x00, 0x00, 0x55, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00,
            0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x21, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x15, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0xFF,
            0xDB, 0x00, 0xA0, 0x01, 0xA3, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x01, 0xA9, 0x00, 0x3C, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0xDE
          };
          id(inverter0).assemble(system_status_frame, sizeof(system_status_frame));

      - delay: 3s

      # Battery Config registers
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_BATTERY_CONFIG);
          const uint8_t battery_config_frame[] = {
            0x01, 0x03, 0x72, 0x16, 0x44, 0x15, 0xE0, 0x15, 0xE0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x64, 0x00, 0x64, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14,
            0xB4, 0x14, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x67, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFC, 0x09, 0x37, 0x00, 0x00, 0x05, 0x32, 0x00, 0x00, 0x00, 0x3C, 0x00,
            0x14, 0x00, 0x38, 0x00, 0x34, 0x00, 0x00, 0x00, 0x5A, 0x00, 0x3C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x15,
            0xE0, 0x13, 0x24, 0x15, 0xE0, 0x14, 0x50, 0x00, 0x64, 0xEA, 0xA4
          };
          id(inverter0).assemble(battery_config_frame, sizeof(battery_config_frame));

      - delay: 3s

      # System Control registers
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_SYSTEM_CONTROL);
          const uint8_t system_control_frame[] = {
            0x01, 0x03, 0x2A, 0x19, 0x08, 0x0D, 0x0C, 0x11, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x32, 0x06, 0xA4, 0x06, 0xA4, 0x09,
            0x37, 0x00, 0x35, 0x00, 0x34, 0x07, 0xD0, 0x17, 0x6F, 0x1A, 0x0C
          };
          id(inverter0).assemble(system_control_frame, sizeof(system_control_frame));

      - delay: 3s

      # System Control registers
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_SYSTEM_CONTROL);
          const uint8_t system_control_frame[] = {
            0x01, 0x03, 0x2A, 0x19, 0x08, 0x0D, 0x0C, 0x11, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x32, 0x06, 0xA4, 0x06, 0xA4, 0x09,
            0x37, 0x00, 0x35, 0x00, 0x34, 0x07, 0xD0, 0x17, 0x6F, 0xEE, 0x6F
          };
          id(inverter0).assemble(system_control_frame, sizeof(system_control_frame));

      - delay: 3s

      # Daily Statistics
      - lambda: |-
          id(inverter0).set_last_request(id(inverter0).REQUEST_DAILY_STATISTICS);
          const uint8_t daily_stats_frame[] = {
            0x01, 0x04, 0x10, 0x00, 0x8C, 0x00, 0x46, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x21, 0x00, 0x00, 0x00,
            0x00, 0x36, 0xF5
          };
          id(inverter0).assemble(daily_stats_frame, sizeof(daily_stats_frame));
